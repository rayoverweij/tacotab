{"version":3,"sources":["images/logo.svg","images/icon-github.svg","home/Welcome.js","home/Settings.js","home/Home.js","participants/SpeakerRow.js","structures/debater.js","participants/Speakers.js","participants/TeamCell.js","participants/TeamSpeakerSelect.js","participants/TeamWinSelector.js","participants/TeamRow.js","participants/TeamTable.js","structures/team.js","participants/Teams.js","participants/Ranking.js","participants/Participants.js","judges/JudgeRow.js","structures/judge.js","judges/Judges.js","draw/RoundRow.js","draw/Round.js","draw/Draw.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Welcome","Row","Col","React","Component","Settings","props","state","nameForm","handleNameFormChange","bind","handleNameFormSubmit","importData","exportData","clearData","bsCustomFileInput","init","event","this","setState","target","value","preventDefault","name","localStorage","setItem","JSON","stringify","document","title","files","getElementById","console","log","length","fr","FileReader","onload","result","parse","tournament_name","speakers_middle","teams_middle","speakers_high","teams_high","speakers_counter","teams_counter","judges","judges_counter","draws_generated","draws","readAsText","item","window","location","reload","data","encodeURIComponent","getItem","downloadAnchorNode","createElement","setAttribute","body","appendChild","click","remove","confirm","clear","md","className","Form","onSubmit","sm","Control","type","placeholder","onChange","Button","variant","id","htmlFor","onClick","src","GitHubLogo","alt","href","rel","Home","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","Content","Pane","SpeakerRow","speaker","disqualified","handleNameUpdate","handleDisqUpdate","handleSpeakerUpdate","checked","key","debaterID","rows","autoComplete","school","Switch","handleSpeakerDelete","Debater","scores","ranks","wins","Speakers","speakerForm","handleSpeakerFormChange","handleSpeakerFormSubmit","speakerFormState","speakers","counter","newSpeaker","push","bracket","updateSpeakers","blankForm","index","indexOf","teams","team","round1","includes","toString","round2","round3","alert","teamName","splice","table","Table","hover","bordered","map","TeamCell","no","handleChange","isNaN","fn","cols","maxLength","TeamSpeakerSelect","r","round","handleFormChange","handleUpdateTeamFormChange","Group","controlId","teamID","Label","as","speakerPicker","TeamWinSelector","win","handleWinFormUpdate","totalWins","updateTeam","TeamRow","getDistinctSpeakers","updateTeamForm","showModal","setScore","setRank","modalShow","modalHide","handleTeamUpdate","sp","s","Set","find","el","parseInt","updateTeamFormState","speakerRows","isInR1","isInR2","isInR3","totalScores","totalRanks","scores1","forEach","scores2","scores3","ranks1","ranks2","ranks3","totalPoints","teamSpeakerSelects","rowSpan","deleteTeam","colSpan","Modal","show","size","onHide","Header","closeButton","Title","Body","TeamTable","Team","d1","d2","d3","sideR1","Teams","addTeamForm","speaker1","speaker2","speaker3","handleAddTeamFormChange","handleAddTeamFormSubmit","addTeamFormState","newTeam","updateTeams","pairs","pairings_middle","pairings_high","pair","prop","opp","filter","teamTable","Ranking","speaker_ranking","slice","sort","a","b","a_sum","reduce","x","y","b_sum","a_ranks","b_ranks","a_team","b_team","a_wins","undefined","b_wins","a_tpoints","b_tpoints","team_ranking","Participants","JudgeRow","canChair","judge","r1","r2","r3","handleJudgeUpdate","updateJudge","deleteJudge","Judge","ID","judgeID","hasChaired","Judges","addJudgeForm","handleJudgeFormChange","handleJudgeFormSubmit","handleJudgeDelete","Object","keys","chair","wings","RoundRow","room","handleRoomChange","newRoom","updatePairings","j","Round","pairings","generated","generateDraw","lenM","lenH","chairs","totalTeams","i","Math","floor","random","pop","currProp","currOpp","chIndex","tm","th","currChair","findIndex","drawr","tables","Draw","App","fluid","logo","Tabs","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4086b0a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.15863a1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-github.07883e93.svg\";","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <h2>Hi David!</h2>\r\n                    <p>Yay! You made it work!</p>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport './Settings.scss';\r\n\r\nimport GitHubLogo from '../images/icon-github.svg';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameForm: \"\"\r\n        }\r\n\r\n        this.handleNameFormChange = this.handleNameFormChange.bind(this);\r\n        this.handleNameFormSubmit = this.handleNameFormSubmit.bind(this);\r\n        this.importData = this.importData.bind(this);\r\n        this.exportData = this.exportData.bind(this);\r\n        this.clearData = this.clearData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bsCustomFileInput.init();\r\n    }\r\n\r\n\r\n    handleNameFormChange(event) {\r\n        this.setState({nameForm: event.target.value});\r\n    }\r\n\r\n    handleNameFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const name = this.state.nameForm;\r\n        localStorage.setItem(\"tournament_name\", JSON.stringify(name));\r\n        document.title = `${name} - TacoTab`;\r\n        this.setState({nameForm: \"\"});\r\n    }\r\n\r\n    importData(event) {\r\n        event.preventDefault();\r\n        const files = document.getElementById(\"import\").files;\r\n        console.log(files);\r\n\r\n        if(files.length <= 0) return false;\r\n\r\n        const fr = new FileReader();\r\n        fr.onload = event => {\r\n            const result = JSON.parse(event.target.result);\r\n            localStorage.setItem(\"tournament_name\", JSON.stringify(result.tournament_name));\r\n            localStorage.setItem(\"speakers_middle\", JSON.stringify(result.speakers_middle));\r\n            localStorage.setItem(\"teams_middle\", JSON.stringify(result.teams_middle));\r\n            localStorage.setItem(\"speakers_high\", JSON.stringify(result.speakers_high));\r\n            localStorage.setItem(\"teams_high\", JSON.stringify(result.teams_high));\r\n            localStorage.setItem(\"speakers_counter\", JSON.stringify(result.speakers_counter));\r\n            localStorage.setItem(\"teams_counter\", JSON.stringify(result.teams_counter));\r\n            localStorage.setItem(\"judges\", JSON.stringify(result.judges));\r\n            localStorage.setItem(\"judges_counter\", JSON.stringify(result.judges_counter));\r\n            localStorage.setItem(\"draws_generated\", JSON.stringify(result.draws_generated));\r\n            localStorage.setItem(\"draws\", JSON.stringify(result.draws));\r\n        }\r\n        fr.readAsText(files.item(0));\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    exportData() {\r\n        let data = \"data:text/json;charset=utf-8,\";\r\n        data += encodeURIComponent(\"{\");\r\n        data += encodeURIComponent('\"tournament_name\": ' + localStorage.getItem(\"tournament_name\") + \",\");\r\n        data += encodeURIComponent('\"speakers_middle\": ' + localStorage.getItem(\"speakers_middle\") + \",\");\r\n        data += encodeURIComponent('\"teams_middle\": ' + localStorage.getItem(\"teams_middle\") + \",\");\r\n        data += encodeURIComponent('\"speakers_high\": ' + localStorage.getItem(\"speakers_high\") + \",\");\r\n        data += encodeURIComponent('\"teams_high\": ' + localStorage.getItem(\"teams_high\") + \",\");\r\n        data += encodeURIComponent('\"speakers_counter\": ' + localStorage.getItem(\"speakers_counter\") + \",\");\r\n        data += encodeURIComponent('\"teams_counter\": ' + localStorage.getItem(\"teams_counter\") + \",\");\r\n        data += encodeURIComponent('\"judges\": ' + localStorage.getItem(\"judges\") + \",\");\r\n        data += encodeURIComponent('\"judges_counter\": ' + localStorage.getItem(\"judges_counter\") + \",\");\r\n        data += encodeURIComponent('\"draws_generated\": ' + localStorage.getItem(\"draws_generated\") + \",\");\r\n        data += encodeURIComponent('\"draws\": ' + localStorage.getItem(\"draws\"));\r\n        data += encodeURIComponent(\"}\");\r\n        \r\n        const downloadAnchorNode = document.createElement('a');\r\n        downloadAnchorNode.setAttribute(\"href\", data);\r\n        downloadAnchorNode.setAttribute(\"download\", \"tournament.json\");\r\n        document.body.appendChild(downloadAnchorNode);\r\n        downloadAnchorNode.click();\r\n        downloadAnchorNode.remove();\r\n    }\r\n \r\n    clearData() {\r\n        const conf = window.confirm(\"Are you sure you want to delete all data?\");\r\n\r\n        if(!conf) {\r\n            return;\r\n        }\r\n\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Settings</h2>\r\n                                <p>Manage your tournament.</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-settings\">\r\n                            <Col>\r\n                                <h3>Change tournament name</h3>\r\n                                <Form onSubmit={this.handleNameFormSubmit} className=\"form-settings\">\r\n                                    <Form.Row>\r\n                                        <Col sm={6}>\r\n                                            <Form.Control\r\n                                                name=\"tournament-name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"New name\"\r\n                                                value={this.state.nameForm}\r\n                                                onChange={this.handleNameFormChange} />\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button variant=\"primary\" type=\"submit\">Save</Button>\r\n                                        </Col>\r\n                                    </Form.Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-settings\">\r\n                            <Col>\r\n                                <h3>Import tournament data</h3>\r\n                                <p>Open files generated with the Export function below. <strong>Note:</strong> this will override all current data!</p>\r\n                                <Form onSubmit={this.importData} className=\"form-settings\">\r\n                                    <Form.Row>\r\n                                        <Col>\r\n                                            <div className=\"custom-file\">\r\n                                                <Form.Control\r\n                                                    name=\"import\"\r\n                                                    id=\"import\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    type=\"file\" />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button variant=\"primary\" type=\"submit\">Import</Button>\r\n                                        </Col>\r\n                                    </Form.Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-settings\">\r\n                            <Col>\r\n                                <h3>Export tournament data</h3>\r\n                                <p>Save all tournament data to a file on your PC.</p>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    className=\"button-settings\"\r\n                                    onClick={this.exportData}>\r\n                                        Export data\r\n                                    </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row-settings\">\r\n                            <Col>\r\n                                <h3>Clear tournament data</h3>\r\n                                <p>Warning: this will delete <strong>all</strong> entered data. Save your data using the Export function first.</p>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    className=\"button-settings\"\r\n                                    onClick={this.clearData}>\r\n                                        Clear data\r\n                                    </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Row>\r\n                            <Col>\r\n                                <h3>About</h3>\r\n                                <p>\r\n                                    TacoTab β version 0.1.0<br />\r\n                                    <img src={GitHubLogo} alt=\"GitHub logo\" id=\"logo-github\"/>&nbsp;\r\n                                    <a href=\"https://github.com/rayoverweij/tacotab\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                        GitHub\r\n                                    </a>\r\n                                </p>\r\n                                <p>\r\n                                    Built by <a href=\"https://rayo.dev\" rel=\"noopener noreferrer\" target=\"_blank\">Rayo Verweij</a> for the <a href=\"https://debate.bard.edu\" rel=\"noopener noreferrer\" target=\"_blank\">Bard Debate Union</a>&mdash;Bard's best sports team.\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n\r\nimport Welcome from './Welcome';\r\nimport Settings from './Settings';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'tournament_name': localStorage.getItem(\"tournament_name\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tab.Container id=\"home-view\" defaultActiveKey=\"welcome\">\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"welcome\" className=\"sub-nav-link\">Welcome</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"settings\" className=\"sub-nav-link\">Settings</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"welcome\">\r\n                                <Welcome />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"settings\">\r\n                                <Settings />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass SpeakerRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.speaker.name,\r\n            disqualified: this.props.speaker.disqualified\r\n        }\r\n\r\n        this.handleNameUpdate = this.handleNameUpdate.bind(this);\r\n        this.handleDisqUpdate = this.handleDisqUpdate.bind(this);\r\n    }\r\n\r\n    handleNameUpdate(event) {\r\n        const name = event.target.value;\r\n        const speaker = this.props.speaker;\r\n        speaker.name = name;\r\n        this.setState({name: name});\r\n        this.props.handleSpeakerUpdate(speaker);\r\n    }\r\n\r\n    handleDisqUpdate(event) {\r\n        const checked = event.target.checked;\r\n        const speaker = this.props.speaker;\r\n        speaker.disqualified = checked;\r\n        this.setState({disqualified: checked});\r\n        this.props.handleSpeakerUpdate(speaker);\r\n    }\r\n    \r\n    render() {\r\n        const speaker = this.props.speaker;\r\n\r\n        return (\r\n            <tr key={`speaker-row-${speaker.debaterID}`}>\r\n                <td className=\"editable\">\r\n                    <textarea\r\n                        className=\"cell-valupdate\"\r\n                        rows=\"1\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleNameUpdate} />\r\n                </td>\r\n                <td>\r\n                    {speaker.school}\r\n                </td>\r\n                <td className=\"cell-low-padding\">\r\n                    <Form.Switch\r\n                        name=\"disqualified\"\r\n                        onChange={this.handleDisqUpdate}\r\n                        checked={this.state.disqualified}\r\n                        className={this.state.disqualified ? \"on\" : \"off\"} />\r\n                </td>\r\n                <td className=\"table-delete\">\r\n                    <div onClick={() => this.props.handleSpeakerDelete(speaker)} className=\"icon icon-trash\"></div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpeakerRow;","class Debater {\r\n    debaterID;\r\n    name;\r\n    school;\r\n    scores;\r\n    ranks;\r\n    wins;\r\n    disqualified;\r\n\r\n    constructor(debaterID, name, school) {\r\n        this.debaterID = debaterID;\r\n        this.name = name;\r\n        this.school = school;\r\n        this.scores = [0, 0, 0];\r\n        this.ranks = [0, 0, 0];\r\n        this.wins = 0;\r\n        this.disqualified = false;\r\n    }\r\n}\r\n\r\nexport default Debater;","import React from 'react';\r\nimport './Speakers.scss';\r\n\r\nimport SpeakerRow from './SpeakerRow';\r\nimport Debater from '../structures/debater';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nclass Speakers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            speakerForm: {\r\n                name: \"\",\r\n                school: \"\"\r\n            }\r\n        }\r\n\r\n        this.handleSpeakerFormChange = this.handleSpeakerFormChange.bind(this);\r\n        this.handleSpeakerFormSubmit = this.handleSpeakerFormSubmit.bind(this);\r\n        this.handleSpeakerUpdate = this.handleSpeakerUpdate.bind(this);\r\n        this.handleSpeakerDelete = this.handleSpeakerDelete.bind(this);\r\n    }\r\n\r\n\r\n    handleSpeakerFormChange(event) {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        let speakerFormState = {...this.state.speakerForm};\r\n        speakerFormState[name] = value;\r\n        this.setState({speakerForm: speakerFormState});\r\n    }\r\n\r\n    handleSpeakerFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let speakers = this.props.speakers;\r\n        let counter = localStorage.getItem(\"speakers_counter\");\r\n\r\n        const newSpeaker = new Debater(counter++, this.state.speakerForm.name, this.state.speakerForm.school);\r\n        speakers.push(newSpeaker);\r\n\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"speakers_middle\", JSON.stringify(speakers));\r\n        } else {\r\n            localStorage.setItem(\"speakers_high\", JSON.stringify(speakers));\r\n        }\r\n        localStorage.setItem(\"speakers_counter\", counter);\r\n\r\n        this.props.updateSpeakers(speakers);\r\n\r\n        let blankForm = {...this.state.speakerForm};\r\n        blankForm.name = \"\";\r\n        this.setState({speakerForm: blankForm});\r\n    }\r\n\r\n    handleSpeakerUpdate(speaker) {\r\n        let speakers = this.props.speakers;\r\n        const index = speakers.indexOf(speaker);\r\n        speakers[index] = speaker;\r\n\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"speakers_middle\", JSON.stringify(speakers));\r\n        } else {\r\n            localStorage.setItem(\"speakers_high\", JSON.stringify(speakers));\r\n        }\r\n\r\n        this.props.updateSpeakers(speakers);\r\n    }\r\n\r\n    handleSpeakerDelete(speaker) {\r\n        for(const team of this.props.teams) {\r\n            if(team.round1.includes(speaker.debaterID.toString()) || team.round2.includes(speaker.debaterID.toString()) || team.round3.includes(speaker.debaterID.toString())) {\r\n                window.alert(`This speaker is still part of team ${team.teamName}. You need to remove them from the team before you can delete them.`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const conf = window.confirm(`Are you sure you want to delete speaker ${speaker.name}?`);\r\n\r\n        if(conf) {\r\n            let speakers = this.props.speakers;\r\n\r\n            const index = speakers.indexOf(speaker);\r\n            speakers.splice(index, 1);\r\n\r\n            if(this.props.bracket === \"middle\") {\r\n                localStorage.setItem(\"speakers_middle\", JSON.stringify(speakers));\r\n            } else {\r\n                localStorage.setItem(\"speakers_high\", JSON.stringify(speakers));\r\n            }\r\n\r\n            this.props.updateSpeakers(speakers);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let table;\r\n        if(this.props.speakers.length === 0) {\r\n            table = <p className=\"none-yet\">No speakers yet!</p>;\r\n        } else {\r\n            table = (\r\n                <Table className=\"speaker-table\" hover bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>School</th>\r\n                            <th>\r\n                                <abbr title=\"Disqualified speakers can still be added to teams and receive scores, but won't be listed in the ranking\">\r\n                                    Disq\r\n                                </abbr>\r\n                            </th>\r\n                            <th className=\"table-delete\">\r\n                                <div className=\"icon icon-trash-filled\"></div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.speakers.map(speaker => {\r\n                            return (\r\n                                <SpeakerRow \r\n                                    key={`speaker-row-${speaker.debaterID}`}\r\n                                    speaker={speaker}\r\n                                    handleSpeakerUpdate={this.handleSpeakerUpdate}\r\n                                    handleSpeakerDelete={this.handleSpeakerDelete} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n            \r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                    <h2>Speakers</h2>\r\n                    \r\n                        <Form onSubmit={this.handleSpeakerFormSubmit}>\r\n                            <Form.Row>\r\n                                <Col>\r\n                                    <Form.Control\r\n                                        name=\"name\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name\"\r\n                                        value={this.state.speakerForm.name}\r\n                                        onChange={this.handleSpeakerFormChange} />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control\r\n                                        name=\"school\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"School\"\r\n                                        value={this.state.speakerForm.school}\r\n                                        onChange={this.handleSpeakerFormChange} />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button variant=\"primary\" type=\"submit\">Add speaker</Button>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={8} className=\"table-col\">\r\n                        {table}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Speakers;","import React from 'react';\r\nimport './TeamCell.scss';\r\n\r\nclass TeamCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.type === \"score\" ? this.props.speaker.scores[this.props.no] : this.props.speaker.ranks[this.props.no]\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let value = event.target.value;\r\n        this.setState({value: value});\r\n        if(!value || isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        this.props.fn(this.props.speaker, this.props.no, value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <textarea\r\n                rows=\"1\"\r\n                cols={this.props.type === \"score\" ? 2 : 1}\r\n                maxLength={this.props.type === \"score\" ? 2 : 1}\r\n                autoComplete=\"off\"\r\n                value={this.state.value}\r\n                onChange={this.handleChange} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamCell;","import React from 'react';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass TeamSpeakerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let r;\r\n        if(this.props.round === 1) {\r\n            r = \"round1\";\r\n        } else if(this.props.round === 2) {\r\n            r = \"round2\";\r\n        } else {\r\n            r = \"round3\";\r\n        }\r\n\r\n        this.state = {\r\n            value: this.props.team[r][this.props.speaker]\r\n        }\r\n\r\n        this.handleFormChange = this.handleFormChange.bind(this);\r\n    }\r\n\r\n    handleFormChange(event) {\r\n        const value = event.target.value;\r\n        this.setState({value: value});\r\n        this.props.handleUpdateTeamFormChange(value, this.props.speaker, this.props.round);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col>\r\n                <Form.Group controlId={`form-update-team-${this.props.team.teamID}-speaker-${this.props.speaker}-round-${this.props.round}`}>\r\n                    <Form.Label>Round {this.props.round}</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name={`speaker-${this.props.speaker}-round-${this.props.round}`}\r\n                        value={this.state.value}\r\n                        onChange={this.handleFormChange}>\r\n                            {this.props.speaker === 2 ? <option value=\"avg\">[no third speaker]</option> : \"\"}\r\n                            {this.props.speakerPicker}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamSpeakerSelect;","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass TeamWinSelector extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            win: this.props.team.wins[this.props.round - 1]\r\n        }\r\n\r\n        this.handleWinFormUpdate = this.handleWinFormUpdate.bind(this);\r\n    }\r\n\r\n    handleWinFormUpdate(event) {\r\n        let team = this.props.team;\r\n\r\n        if(event.target.value === \"true\") {\r\n            team.wins[this.props.round - 1] = true;\r\n            team.totalWins += 1;\r\n            this.setState({win: true});\r\n        } else {\r\n            team.wins[this.props.round - 1] = false;\r\n            team.totalWins -= 1;\r\n            this.setState({win: false});\r\n        }\r\n\r\n        this.props.updateTeam(team);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    name={`win-form-${this.props.team.teamID}-round-${this.props.round}`}\r\n                    value={this.state.win}\r\n                    onChange={this.handleWinFormUpdate}>\r\n                        <option value={true}>Win</option>\r\n                        <option value={false}>Loss</option>\r\n                </Form.Control>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamWinSelector;","import React from 'react';\r\nimport TeamCell from './TeamCell';\r\nimport TeamSpeakerSelect from './TeamSpeakerSelect';\r\nimport TeamWinSelector from './TeamWinSelector';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass TeamRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            speakers: this.getDistinctSpeakers(),\r\n            updateTeamForm: [\r\n                [this.props.team.round1[0], this.props.team.round2[0], this.props.team.round3[0]],\r\n                [this.props.team.round1[1], this.props.team.round2[1], this.props.team.round3[1]],\r\n                [this.props.team.round1[2], this.props.team.round2[2], this.props.team.round3[2]]\r\n            ],\r\n            showModal: false\r\n        }\r\n\r\n        this.setScore = this.setScore.bind(this);\r\n        this.setRank = this.setRank.bind(this);\r\n        this.modalShow = this.modalShow.bind(this);\r\n        this.modalHide = this.modalHide.bind(this);\r\n        this.handleUpdateTeamFormChange = this.handleUpdateTeamFormChange.bind(this);\r\n        this.handleTeamUpdate = this.handleTeamUpdate.bind(this);\r\n    }\r\n\r\n\r\n    getDistinctSpeakers() {\r\n        let sp = []\r\n        for(let s = 0; s < 3; s++) {\r\n            sp.push(this.props.team.round1[s]);\r\n            sp.push(this.props.team.round2[s]);\r\n            sp.push(this.props.team.round3[s]);\r\n        }\r\n        return [...new Set(sp)];\r\n    }\r\n    \r\n    modalShow() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    modalHide() {\r\n        this.setState({showModal: false});\r\n    }\r\n    \r\n    setScore(speaker, no, value) {\r\n        let speakers = this.props.speakers;\r\n        \r\n        speakers\r\n            .find(el => el.debaterID.toString() === speaker.debaterID.toString())\r\n            .scores[no] = parseInt(value);\r\n\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"speakers_middle\", JSON.stringify(speakers));\r\n        } else {\r\n            localStorage.setItem(\"speakers_high\", JSON.stringify(speakers));\r\n        }\r\n\r\n        this.props.updateSpeakers(speakers);\r\n    }\r\n\r\n    setRank(speaker, no, value) {\r\n        let speakers = this.props.speakers;\r\n\r\n        speakers\r\n            .find(el => el.debaterID.toString() === speaker.debaterID.toString())\r\n            .ranks[no] = parseInt(value);\r\n        \r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"speakers_middle\", JSON.stringify(speakers));\r\n        } else {\r\n            localStorage.setItem(\"speakers_high\", JSON.stringify(speakers));\r\n        }\r\n\r\n        this.props.updateSpeakers(speakers);\r\n    }\r\n\r\n    handleUpdateTeamFormChange(value, speaker, round) {\r\n        let updateTeamFormState = this.state.updateTeamForm;\r\n        updateTeamFormState[speaker][round - 1] = value;\r\n        this.setState({updateTeamForm: updateTeamFormState});\r\n    }\r\n\r\n    handleTeamUpdate(event) {\r\n        event.preventDefault();\r\n\r\n        let team = this.props.team;\r\n        team.round1 = [this.state.updateTeamForm[0][0], this.state.updateTeamForm[1][0], this.state.updateTeamForm[2][0]];\r\n        team.round2 = [this.state.updateTeamForm[0][1], this.state.updateTeamForm[1][1], this.state.updateTeamForm[2][1]];\r\n        team.round3 = [this.state.updateTeamForm[0][2], this.state.updateTeamForm[1][2], this.state.updateTeamForm[2][2]];\r\n\r\n        this.props.updateTeam(team);\r\n        this.setState({speakers: this.getDistinctSpeakers()});\r\n        this.modalHide();\r\n    }\r\n\r\n\r\n    render() {\r\n        const team = this.props.team;\r\n        const speakers = this.state.speakers.map(sp => {\r\n            if(sp === \"avg\") {\r\n                return \"avg\";\r\n            } else {\r\n                return this.props.speakers.find(el => {\r\n                    return el.debaterID.toString() === sp;\r\n                });\r\n            }\r\n        });\r\n\r\n        // Calculate averages\r\n        if(speakers.includes(\"avg\")) {\r\n            const index = speakers.indexOf(\"avg\");\r\n            \r\n            speakers[index] = {\r\n                debaterID: \"avg\",\r\n                name: \"[averaged third speaker]\",\r\n                scores: [\r\n                    (speakers[0].scores[0] + speakers[1].scores[0]) / 2,\r\n                    (speakers[0].scores[1] + speakers[1].scores[1]) / 2,\r\n                    (speakers[0].scores[2] + speakers[1].scores[2]) / 2\r\n                ],\r\n                ranks: [\r\n                    (speakers[0].ranks[0] + speakers[1].ranks[0]) / 2,\r\n                    (speakers[0].ranks[1] + speakers[1].ranks[1]) / 2,\r\n                    (speakers[0].ranks[2] + speakers[1].ranks[2]) / 2\r\n                ]\r\n            }\r\n        }\r\n\r\n        // Generate the table rows\r\n        const speakerRows = speakers.map(speaker => {\r\n            if(speaker.debaterID === \"avg\") {\r\n                return <tr key={`${team.teamID}-average-third`} className=\"invisible-third\"></tr>;\r\n            }\r\n\r\n            const isInR1 = this.props.team.round1.includes(speaker.debaterID.toString());\r\n            const isInR2 = this.props.team.round2.includes(speaker.debaterID.toString());\r\n            const isInR3 = this.props.team.round3.includes(speaker.debaterID.toString());\r\n\r\n            let totalScores = 0;\r\n            if (isInR1) totalScores += speaker.scores[0];\r\n            if (isInR2) totalScores += speaker.scores[1];\r\n            if (isInR3) totalScores += speaker.scores[2];\r\n\r\n            let totalRanks = 0;\r\n            if (isInR1) totalRanks += speaker.ranks[0];\r\n            if (isInR2) totalRanks += speaker.ranks[1];\r\n            if (isInR3) totalRanks += speaker.ranks[2];\r\n\r\n            return (\r\n                <tr key={`${speaker.name}_row`}>\r\n                    <td>{speaker.name}</td>\r\n                    <td className={isInR1 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"score\" speaker={speaker} no={0} fn={this.setScore} />\r\n                    </td>\r\n                    <td className={isInR1 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"rank\" speaker={speaker} no={0} fn={this.setRank} />\r\n                    </td>\r\n                    <td className={isInR2 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"score\" speaker={speaker} no={1} fn={this.setScore} />\r\n                    </td>\r\n                    <td className={isInR2 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"rank\" speaker={speaker} no={1} fn={this.setRank} />\r\n                    </td>\r\n                    <td className={isInR3 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"score\" speaker={speaker} no={2} fn={this.setScore} />\r\n                    </td>\r\n                    <td className={isInR3 ? \"editable\" : \"disabled\"}>\r\n                        <TeamCell type=\"rank\" speaker={speaker} no={2} fn={this.setRank} />\r\n                    </td>\r\n                    <td>{totalScores}</td>\r\n                    <td>{totalRanks}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        // Calculate total scores\r\n        let scores1 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round1.includes(speaker.debaterID.toString())) {\r\n                scores1 += speaker.scores[0]\r\n            }\r\n        });\r\n        let scores2 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round2.includes(speaker.debaterID.toString())) {\r\n                scores2 += speaker.scores[1]\r\n            }\r\n        });\r\n        let scores3 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round3.includes(speaker.debaterID.toString())) {\r\n                scores3 += speaker.scores[2]\r\n            }\r\n        });\r\n\r\n        // Calculate total ranks\r\n        let ranks1 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round1.includes(speaker.debaterID.toString())) {\r\n                ranks1 += speaker.ranks[0]\r\n            }\r\n        });\r\n        let ranks2 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round2.includes(speaker.debaterID.toString())) {\r\n                ranks2 += speaker.ranks[1]\r\n            }\r\n        });\r\n        let ranks3 = 0;\r\n        speakers.forEach(speaker => {\r\n            if(this.props.team.round3.includes(speaker.debaterID.toString())) {\r\n                ranks3 += speaker.ranks[2]\r\n            }\r\n        });\r\n\r\n\r\n        // Update team scores\r\n        team.totalPoints = scores1 + scores2 + scores3;\r\n        let teams = this.props.teams;\r\n        const index = teams.indexOf(el => {\r\n            return el.teamID === team.teamID;\r\n        });\r\n        teams[index] = team;\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"teams_middle\", JSON.stringify(teams));\r\n        } else {\r\n            localStorage.setItem(\"teams_high\", JSON.stringify(teams));\r\n        }\r\n\r\n        // Update the people selection picker\r\n        const teamSpeakerSelects = [0, 1, 2].map(sp => {\r\n            return (\r\n                <div key={`teamSpeakerSelectRow-team-${team.teamID}-speaker-${sp}`} className=\"form-update-team-speaker\">\r\n                    <p>Speaker {sp + 1}</p>\r\n                    <Form.Row>\r\n                        {\r\n                            [1, 2, 3].map(round => {\r\n                                return (\r\n                                    <TeamSpeakerSelect\r\n                                        key={`teamSpeakerSelect-team-${team.teamID}-speaker-${sp}-round-${round}`}\r\n                                        team={team}\r\n                                        speaker={sp}\r\n                                        round={round}\r\n                                        value={this.state.updateTeamForm}\r\n                                        handleUpdateTeamFormChange={this.handleUpdateTeamFormChange}\r\n                                        speakerPicker={this.props.speakerPicker} />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Form.Row>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <tbody>\r\n                <tr>\r\n                    <th rowSpan={this.state.speakers.length + 3} className=\"cell-teamname\">\r\n                        {team.teamName}\r\n                        <br />\r\n                        <div className=\"icon-people\" onClick={this.modalShow}></div>\r\n                        <div className=\"icon-trash\" onClick={() => this.props.deleteTeam(team)}></div>\r\n                    </th>\r\n                </tr>\r\n                {speakerRows}\r\n                <tr className=\"row-total\">\r\n                    <td>Team total</td>\r\n                    <td>{scores1}</td>\r\n                    <td>{ranks1}</td>\r\n                    <td>{scores2}</td>\r\n                    <td>{ranks2}</td>\r\n                    <td>{scores3}</td>\r\n                    <td>{ranks3}</td>\r\n                    <td>{scores1 + scores2 + scores3}</td>\r\n                    <td>{ranks1 + ranks2 + ranks3}</td>\r\n                </tr>\r\n                <tr className=\"row-wins\">\r\n                    <td>Team wins</td>\r\n                    <td colSpan=\"2\">\r\n                        <TeamWinSelector team={this.props.team} round=\"1\" updateTeam={this.props.updateTeam} />\r\n                    </td>\r\n                    <td colSpan=\"2\">\r\n                        <TeamWinSelector team={this.props.team} round=\"2\" updateTeam={this.props.updateTeam} />\r\n                    </td>\r\n                    <td colSpan=\"2\">\r\n                        <TeamWinSelector team={this.props.team} round=\"3\" updateTeam={this.props.updateTeam} />\r\n                    </td>\r\n                    <td colSpan=\"2\" className=\"cell-totalwins\">\r\n                        Total wins: {team.totalWins}\r\n                    </td>\r\n                </tr>\r\n\r\n                <Modal show={this.state.showModal} size=\"lg\" onHide={this.modalHide}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Specify team members per round</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleTeamUpdate}>\r\n                            {teamSpeakerSelects}\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"form-button\">Save</Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamRow;","import React from 'react';\r\nimport './TeamTable.scss';\r\nimport Table from 'react-bootstrap/Table';\r\nimport TeamRow from './TeamRow';\r\n\r\nclass TeamTable extends React.Component {\r\n    render() {\r\n        return (\r\n            <Table hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Team Name</th>\r\n                        <th>Speakers</th>\r\n                        <th>R1 Score</th>\r\n                        <th>R1 Rank</th>\r\n                        <th>R2 Score</th>\r\n                        <th>R2 Rank</th>\r\n                        <th>R3 Score</th>\r\n                        <th>R3 Rank</th>\r\n                        <th>Total Score</th>\r\n                        <th>Total Rank</th>\r\n                    </tr>\r\n                </thead>\r\n                {this.props.teams.map(team => {\r\n                    return <TeamRow\r\n                                key={`${team.teamName}-row`}\r\n                                team={team}\r\n                                teams={this.props.teams}\r\n                                speakers={this.props.speakers}\r\n                                bracket={this.props.bracket}\r\n                                updateSpeakers={this.props.updateSpeakers}\r\n                                updateTeam={this.props.updateTeam}\r\n                                deleteTeam = {this.props.deleteTeam}\r\n                                speakerPicker = {this.props.speakerPicker} />;\r\n                })}\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamTable;","class Team {\r\n    teamID;\r\n    teamName;\r\n    round1;\r\n    round2;\r\n    round3;\r\n    totalPoints;\r\n    wins;\r\n    totalWins;\r\n    sideR1;\r\n\r\n    constructor(teamID, teamName, d1, d2, d3) {\r\n        this.teamID = teamID;\r\n        this.teamName = teamName;\r\n        this.round1 = [d1, d2, d3];\r\n        this.round2 = [d1, d2, d3];\r\n        this.round3 = [d1, d2, d3];\r\n        this.totalPoints = 0;\r\n        this.wins = [false, false, false];\r\n        this.totalWins = 0;\r\n        this.sideR1 = \"\";\r\n    }\r\n\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\nimport './Teams.scss';\r\nimport TeamTable from './TeamTable';\r\n\r\nimport Team from '../structures/team';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Teams extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            addTeamForm: {\r\n                teamName: \"\",\r\n                speaker1: \"\",\r\n                speaker2: \"\",\r\n                speaker3: \"\"\r\n            },\r\n            showModal: false\r\n        }\r\n\r\n        this.modalShow = this.modalShow.bind(this);\r\n        this.modalHide = this.modalHide.bind(this);\r\n        this.handleAddTeamFormChange = this.handleAddTeamFormChange.bind(this);\r\n        this.handleAddTeamFormSubmit = this.handleAddTeamFormSubmit.bind(this);\r\n        this.updateTeam = this.updateTeam.bind(this);\r\n        this.deleteTeam = this.deleteTeam.bind(this);\r\n    }\r\n\r\n\r\n    modalShow() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    modalHide() {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    handleAddTeamFormChange(event) {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        let addTeamFormState = {...this.state.addTeamForm};\r\n        addTeamFormState[name] = value;\r\n        this.setState({addTeamForm: addTeamFormState});\r\n    }\r\n\r\n    handleAddTeamFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let teams = this.props.teams;\r\n        let counter = localStorage.getItem(\"teams_counter\");\r\n\r\n        const newTeam = new Team(counter++, this.state.addTeamForm.teamName, this.state.addTeamForm.speaker1, this.state.addTeamForm.speaker2, this.state.addTeamForm.speaker3);\r\n        teams.push(newTeam);\r\n\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"teams_middle\", JSON.stringify(teams));\r\n        } else {\r\n            localStorage.setItem(\"teams_high\", JSON.stringify(teams));\r\n        }\r\n        localStorage.setItem(\"teams_counter\", counter);\r\n\r\n        this.props.updateTeams(teams);\r\n        this.modalHide();\r\n    }\r\n\r\n    updateTeam(team) {\r\n        let teams = this.props.teams;\r\n\r\n        const index = teams.indexOf(el => {\r\n            return el.teamID === team.teamID;\r\n        });\r\n\r\n        teams[index] = team;\r\n\r\n        if(this.props.bracket === \"middle\") {\r\n            localStorage.setItem(\"teams_middle\", JSON.stringify(teams));\r\n        } else {\r\n            localStorage.setItem(\"teams_high\", JSON.stringify(teams));\r\n        }\r\n\r\n        this.props.updateTeams(teams);\r\n    }\r\n\r\n    deleteTeam(team) {\r\n        const draws = JSON.parse(localStorage.getItem(\"draws\"));\r\n        for (const round in draws) {\r\n            let pairs;\r\n            if(this.props.bracket === \"middle\") {\r\n                pairs = draws[round].pairings_middle;\r\n            } else {\r\n                pairs = draws[round].pairings_high;\r\n            }\r\n            for (const pair of pairs) {\r\n                if(pair.prop === team.teamID || pair.opp === team.teamID) {\r\n                    alert(\"This team has already started the tournament. You can't delete it anymore. You can still replace its speakers.\");\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const conf = window.confirm(`Are you sure you want to delete team ${team.teamName}?`);\r\n        \r\n        if(conf) {\r\n            let teams = this.props.teams;\r\n\r\n            teams = teams.filter(el => {\r\n                return el.teamID !== team.teamID;\r\n            });\r\n            \r\n            if(this.props.bracket === \"middle\") {\r\n                localStorage.setItem(\"teams_middle\", JSON.stringify(teams));\r\n            } else {\r\n                localStorage.setItem(\"teams_high\", JSON.stringify(teams));\r\n            }\r\n\r\n            this.props.updateTeams(teams);\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        let speakerPicker = this.props.speakers.map(speaker => {\r\n            return (\r\n                <option value={speaker.debaterID} key={`option-${speaker.debaterID}`}>{speaker.name}</option>\r\n            );\r\n        });\r\n\r\n        let teamTable;\r\n        if(this.props.teams.length === 0) {\r\n            teamTable = <p className=\"none-yet\">No teams yet!</p>;\r\n        } else {\r\n            teamTable = <TeamTable\r\n                            speakers={this.props.speakers}\r\n                            teams={this.props.teams}\r\n                            bracket={this.props.bracket}\r\n                            updateSpeakers={this.props.updateSpeakers}\r\n                            updateTeam={this.updateTeam}\r\n                            deleteTeam={this.deleteTeam}\r\n                            speakerPicker={speakerPicker} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                        <h2>Teams</h2>\r\n                        <Button onClick={this.modalShow}>Add team</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {teamTable}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.modalHide}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add a team</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form onSubmit={this.handleAddTeamFormSubmit}>\r\n                            <Form.Group controlId={`form-add-team-${this.props.bracket}-name`}>\r\n                                <Form.Label>Team name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"teamName\"\r\n                                    value={this.state.addTeamForm.teamName}\r\n                                    onChange={this.handleAddTeamFormChange} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId={`form-add-team-${this.props.bracket}-speaker-1`}>\r\n                                <Form.Label>Speaker 1</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"speaker1\"\r\n                                    value={this.state.addTeamForm.speaker1}\r\n                                    onChange={this.handleAddTeamFormChange}>\r\n                                        <option>-- pick a speaker --</option>\r\n                                        {speakerPicker}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={`form-add-team-${this.props.bracket}-speaker-2`}>\r\n                                <Form.Label>Speaker 2</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"speaker2\"\r\n                                    value={this.state.addTeamForm.speaker2}\r\n                                    onChange={this.handleAddTeamFormChange}>\r\n                                        <option>-- pick a speaker --</option>\r\n                                        {speakerPicker}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId={`form-add-team-${this.props.bracket}-speaker-3`}>\r\n                                <Form.Label>Speaker 3</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"speaker3\"\r\n                                    value={this.state.addTeamForm.speaker3}\r\n                                    onChange={this.handleAddTeamFormChange}>\r\n                                        <option>-- pick a speaker --</option>\r\n                                        <option value=\"avg\">[no third speaker]</option>\r\n                                        {speakerPicker}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"form-button\">Add</Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teams;","import React from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nclass Ranking extends React.Component {\r\n    // doesn't automatically update yet\r\n    render() {\r\n        const speakers = this.props.speakers;\r\n        const teams = this.props.teams;\r\n\r\n        const speakers_ranked = speakers\r\n                                .slice(0)\r\n                                .filter(el => el.disqualified === false)\r\n                                .sort((a, b) => {\r\n            // First sort on total speaker scores\r\n            const a_sum = a.scores.reduce((x, y) => x + y, 0);\r\n            const b_sum = b.scores.reduce((x, y) => x + y, 0);\r\n\r\n            if(a_sum > b_sum) {\r\n                return -1;\r\n            } else if(a_sum < b_sum) {\r\n                return 1;\r\n            } else {\r\n                // Secondly sort on speaker ranks\r\n                const a_ranks = a.ranks.reduce((x, y) => x + y, 0);\r\n                const b_ranks = b.ranks.reduce((x, y) => x + y, 0);\r\n\r\n                if(a_ranks < b_ranks) {\r\n                    return -1;\r\n                } else if(a_ranks > b_ranks) {\r\n                    return 1;\r\n                } else {\r\n                    // Thirdly sort on team wins\r\n                    const a_team = teams.find(el => el.round1.includes(a.debaterID.toString()));\r\n                    const b_team = teams.find(el => el.round1.includes(b.debaterID.toString()));\r\n                    const a_wins = a_team === undefined ? 0 : a_team.totalWins;\r\n                    const b_wins = b_team === undefined ? 0 : b_team.totalWins;\r\n\r\n                    if(a_wins > b_wins) {\r\n                        return -1;\r\n                    } else if(a_wins < b_wins) {\r\n                        return 1;\r\n                    } else {\r\n                        // Fourthly sort on team points\r\n                        const a_tpoints = a_team === undefined ? 0 : a_team.totalPoints;\r\n                        const b_tpoints = b_team === undefined ? 0 : b_team.totalPoints;\r\n\r\n                        if(a_tpoints > b_tpoints) {\r\n                            return -1;\r\n                        } else if(a_tpoints < b_tpoints) {\r\n                            return 1;\r\n                        } else {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        const speaker_ranking = speakers_ranked.map((speaker, index) => {\r\n            let team = teams.find(el => el.round1.includes(speaker.debaterID.toString()));\r\n            if (team === undefined) {\r\n                team = {}\r\n                team.totalWins = 0;\r\n                team.totalPoints = 0;\r\n            }\r\n            return (\r\n                <tr key={`speaker_rank_${index + 1}`}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{speaker.name}</td>\r\n                    <td>{speaker.scores.reduce((x, y) => x + y, 0)}</td>\r\n                    <td>{speaker.ranks.reduce((x, y) => x + y, 0)}</td>\r\n                    <td>{team.totalWins}</td>\r\n                    <td>{team.totalPoints}</td>\r\n                </tr>\r\n            );\r\n        }).splice(0, 20);\r\n\r\n\r\n        const teams_ranked = teams.slice(0).sort((a, b) => {\r\n            // First sort on team wins\r\n            const a_wins = a.totalWins;\r\n            const b_wins = b.totalWins;\r\n\r\n            if(a_wins > b_wins) {\r\n                return -1;\r\n            } else if(a_wins < b_wins) {\r\n                return 1;\r\n            } else {\r\n                // Secondlyly sort on team points\r\n                const a_tpoints = a.totalPoints;\r\n                const b_tpoints = b.totalPoints;\r\n\r\n                if(a_tpoints > b_tpoints) {\r\n                    return -1;\r\n                } else if(a_tpoints < b_tpoints) {\r\n                    return 1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            }\r\n        });\r\n\r\n        const team_ranking = teams_ranked.map((team, index) => {\r\n            return (\r\n                <tr key={`team_rank_${index + 1}`}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{team.teamName}</td>\r\n                    <td>{team.totalWins}</td>\r\n                    <td>{team.totalPoints}</td>\r\n                </tr>\r\n            );\r\n        });\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                        <h2>Ranking</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} className=\"table-col\">\r\n                        <h4>Speakers</h4>\r\n                        <Table hover className=\"speaker-ranking-table table-no-top-margin\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th><abbr title=\"Total speaker points\">ΣSP</abbr></th>\r\n                                    <th><abbr title=\"Total speaker ranks (lower is better)\">ΣSR</abbr></th>\r\n                                    <th><abbr title=\"Total team wins\">ΣTW</abbr></th>\r\n                                    <th><abbr title=\"Total team points\">ΣTP</abbr></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {speaker_ranking}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <h4>Teams</h4>\r\n                        <Table hover className=\"table-no-top-margin\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th><abbr title=\"Total team wins\">ΣTW</abbr></th>\r\n                                    <th><abbr title=\"Total team points\">ΣTP</abbr></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {team_ranking}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ranking;","import React from 'react';\r\n\r\nimport Speakers from './Speakers';\r\nimport Teams from './Teams';\r\nimport Ranking from './Ranking';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nclass Participants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            teams: this.props.bracket === \"middle\" ? JSON.parse(localStorage.getItem(\"teams_middle\")) : JSON.parse(localStorage.getItem(\"teams_high\")),\r\n            speakers: this.props.bracket === \"middle\" ? JSON.parse(localStorage.getItem(\"speakers_middle\")) : JSON.parse(localStorage.getItem(\"speakers_high\"))\r\n        }\r\n\r\n        this.updateSpeakers = this.updateSpeakers.bind(this);\r\n        this.updateTeams = this.updateTeams.bind(this);\r\n    }\r\n\r\n\r\n    updateSpeakers(speakers) {\r\n        this.setState({speakers: speakers});\r\n    }\r\n\r\n    updateTeams(teams) {\r\n        this.setState({teams: teams});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Tab.Container id={`part-view-${this.props.bracket}`} defaultActiveKey=\"speakers\">\r\n                <Row className=\"part-view\">\r\n                    <Col sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"speakers\" className=\"sub-nav-link\">Speakers</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"teams\" className=\"sub-nav-link\">Teams</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"ranking\" className=\"sub-nav-link\">Ranking</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"speakers\">\r\n                                <Speakers speakers={this.state.speakers} teams={this.state.teams} bracket={this.props.bracket} updateSpeakers={this.updateSpeakers} updateTeams={this.updateTeams} />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"teams\">\r\n                                <Teams speakers={this.state.speakers} teams={this.state.teams} bracket={this.props.bracket} updateSpeakers={this.updateSpeakers} updateTeams={this.updateTeams} />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ranking\">\r\n                                <Ranking speakers={this.state.speakers} teams={this.state.teams} />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Participants;","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass JudgeRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            canChair: this.props.judge.canChair,\r\n            r1: this.props.judge.r1,\r\n            r2: this.props.judge.r2,\r\n            r3: this.props.judge.r3\r\n        }\r\n\r\n        this.handleJudgeUpdate = this.handleJudgeUpdate.bind(this);\r\n    }\r\n\r\n\r\n    handleJudgeUpdate(event) {\r\n        const name = event.target.name;\r\n        const checked = event.target.checked;\r\n        const judge = this.props.judge;\r\n\r\n        judge[name] = checked;\r\n        this.setState({[name]: checked});\r\n\r\n        this.props.updateJudge(judge);\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td className=\"judge-table-name\">{this.props.judge.name}</td>\r\n                <td className=\"cell-low-padding\">\r\n                    <Form.Switch\r\n                        name=\"canChair\"\r\n                        onChange={this.handleJudgeUpdate}\r\n                        checked={this.state.canChair}\r\n                        className={this.state.canChair ? \"on\" : \"off\"} />\r\n                </td>\r\n                <td className=\"cell-low-padding\">\r\n                    <Form.Switch\r\n                        name=\"r1\"\r\n                        onChange={this.handleJudgeUpdate}\r\n                        checked={this.state.r1}\r\n                        className={this.state.r1 ? \"on\" : \"off\"} />\r\n                </td>\r\n                <td className=\"cell-low-padding\">\r\n                    <Form.Switch\r\n                        name=\"r2\"\r\n                        onChange={this.handleJudgeUpdate}\r\n                        checked={this.state.r2}\r\n                        className={this.state.r2 ? \"on\" : \"off\"} />\r\n                </td>\r\n                <td className=\"cell-low-padding\">\r\n                    <Form.Switch\r\n                        name=\"r3\"\r\n                        onChange={this.handleJudgeUpdate}\r\n                        checked={this.state.r3}\r\n                        className={this.state.r3 ? \"on\" : \"off\"} />\r\n                </td>\r\n                <td className=\"table-delete cell-low-padding\">\r\n                    <div onClick={() => this.props.deleteJudge(this.props.judge)} className=\"icon icon-trash\"></div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JudgeRow;","class Judge {\r\n    judgeID;\r\n    name;\r\n    canChair;\r\n    r1;\r\n    r2;\r\n    r3;\r\n    hasChaired;\r\n\r\n    constructor(ID, name) {\r\n        this.judgeID = ID;\r\n        this.name = name;\r\n        this.canChair = false;\r\n        this.r1 = true;\r\n        this.r2 = true;\r\n        this.r3 = true;\r\n        this.hasChaired = [];\r\n    }\r\n}\r\n\r\nexport default Judge;","import React from 'react';\r\nimport './Judges.scss';\r\n\r\nimport JudgeRow from './JudgeRow';\r\nimport Judge from '../structures/judge';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nclass Judges extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            judges: JSON.parse(localStorage.getItem(\"judges\")),\r\n            addJudgeForm: \"\"\r\n        }\r\n\r\n        this.handleJudgeFormChange = this.handleJudgeFormChange.bind(this);\r\n        this.handleJudgeFormSubmit = this.handleJudgeFormSubmit.bind(this);\r\n        this.handleJudgeUpdate = this.handleJudgeUpdate.bind(this);\r\n        this.handleJudgeDelete = this.handleJudgeDelete.bind(this);\r\n    }\r\n\r\n\r\n    handleJudgeFormChange(event) {\r\n        this.setState({addJudgeForm: event.target.value});\r\n    }\r\n\r\n    handleJudgeFormSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let judges = this.state.judges;\r\n        let counter = localStorage.getItem(\"judges_counter\");\r\n\r\n        judges.push(new Judge(counter++, this.state.addJudgeForm));\r\n\r\n        this.setState({judges: judges});\r\n        localStorage.setItem(\"judges\", JSON.stringify(judges));\r\n        localStorage.setItem(\"judges_counter\", counter);\r\n\r\n        this.setState({addJudgeForm: \"\"});\r\n    }\r\n\r\n    handleJudgeUpdate(judge) {\r\n        let judges = this.state.judges;\r\n\r\n        const index = judges.indexOf(judge);\r\n        judges[index] = judge;\r\n\r\n        localStorage.setItem(\"judges\", JSON.stringify(judges));\r\n        this.setState({judges: judges});\r\n    }\r\n\r\n    handleJudgeDelete(judge) {\r\n        const draws = JSON.parse(localStorage.getItem(\"draws\"));\r\n        for (const round of draws) {\r\n            for(const pairs of Object.keys(round)) {\r\n                for (const pair of round[pairs]) {\r\n                    if(pair.chair === judge.judgeID || pair.wings.includes(judge.judgeID)) {\r\n                        alert(\"This judge has already taken part in a round. You can't delete them anymore. You can still change their availability for each round.\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const conf = window.confirm(`Are you sure you want to delete judge ${judge.name}?`);\r\n\r\n        if(conf) {\r\n            let judges = this.state.judges;\r\n\r\n            const index = judges.indexOf(judge);\r\n            judges.splice(index, 1);\r\n\r\n            localStorage.setItem(\"judges\", JSON.stringify(judges));\r\n            this.setState({judges: judges});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let table;\r\n        if(this.state.judges.length === 0) {\r\n            table = <p className=\"none-yet\">No judges yet!</p>;\r\n        } else {\r\n            table = (\r\n                <Table className=\"judge-table\" hover bordered>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"judge-table-name\">Name</th>\r\n                            <th>Chair?</th>\r\n                            <th>Round 1?</th>\r\n                            <th>Round 2?</th>\r\n                            <th>Round 3?</th>\r\n                            <th className=\"table-delete\">\r\n                                <div className=\"icon icon-trash-filled\"></div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.judges.map(judge => {\r\n                            return (\r\n                                <JudgeRow\r\n                                    key={`judge-row-${judge.name}`}\r\n                                    judge={judge}\r\n                                    updateJudge={this.handleJudgeUpdate}\r\n                                    deleteJudge = {this.handleJudgeDelete} />\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            );\r\n        }\r\n\r\n\r\n        return (\r\n            <Tab.Container id={`judges-view`} defaultActiveKey=\"judges\">\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"judges\" className=\"sub-nav-link\">Judges</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"judges\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h2>Judges</h2>\r\n                                        <Form onSubmit={this.handleJudgeFormSubmit}>\r\n                                            <Form.Row>\r\n                                                <Col md={4}>\r\n                                                    <Form.Control\r\n                                                        name=\"judgeName\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Name\"\r\n                                                        value={this.state.addJudgeForm}\r\n                                                        onChange={this.handleJudgeFormChange} />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Button variant=\"primary\" type=\"submit\">Add judge</Button>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                        </Form>\r\n                                        <div id=\"total-judges\">\r\n                                            <p>\r\n                                                Total judges each round: {this.state.judges.filter(el => el.r1).length} &middot; {this.state.judges.filter(el => el.r2).length} &middot; {this.state.judges.filter(el => el.r3).length}\r\n                                                <br />\r\n                                                Total chairs each round: {this.state.judges.filter(el => el.canChair && el.r1).length} &middot; {this.state.judges.filter(el => el.canChair && el.r2).length} &middot; {this.state.judges.filter(el => el.canChair && el.r3).length}\r\n                                            </p>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col md={8} className=\"table-col\">\r\n                                        {table}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Judges;","import React from 'react';\r\n\r\nclass RoundRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            room: this.props.pair.room\r\n        }\r\n\r\n        this.handleRoomChange = this.handleRoomChange.bind(this);\r\n    }\r\n\r\n    handleRoomChange(event) {\r\n        const newRoom = event.target.value;\r\n        const pair = this.props.pair;\r\n        this.setState({room: newRoom});\r\n        pair.room = newRoom;\r\n        this.props.updatePairings(pair, this.props.bracket, this.props.round);\r\n    }\r\n\r\n    render() {\r\n        const teams = this.props.bracket === \"middle\" ? JSON.parse(localStorage.getItem(\"teams_middle\")) : JSON.parse(localStorage.getItem(\"teams_high\"));\r\n        const judges = JSON.parse(localStorage.getItem(\"judges\"));\r\n        const pair = this.props.pair;\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"editable\">\r\n                    <textarea\r\n                        className=\"cell-valupdate\"\r\n                        rows=\"1\"\r\n                        cols=\"12\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.room}\r\n                        onChange={this.handleRoomChange} />\r\n                </td>\r\n                <td className=\"draw-table-team-cell\">\r\n                    {teams.find(el => el.teamID === pair.prop).teamName}\r\n                </td>\r\n                <td className=\"draw-table-team-cell\">\r\n                    {teams.find(el => el.teamID === pair.opp).teamName}\r\n                </td>\r\n                <td>\r\n                    {judges.find(el => el.judgeID === pair.chair).name}&copy;{pair.wings.map(el => {\r\n                        return \", \" + judges.find(j => j.judgeID === el).name\r\n                    })}\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoundRow;","import React from 'react';\r\nimport './Round.scss';\r\n\r\nimport RoundRow from './RoundRow';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nclass Round extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const pairings = JSON.parse(localStorage.getItem(\"draws\"))[this.props.r - 1];\r\n\r\n        this.state = {\r\n            generated: JSON.parse(localStorage.getItem(\"draws_generated\"))[this.props.r - 1],\r\n            pairings_middle: pairings.pairings_middle,\r\n            pairings_high: pairings.pairings_high\r\n        }\r\n\r\n        this.generateDraw = this.generateDraw.bind(this);\r\n        this.updatePairings = this.updatePairings.bind(this);\r\n    }\r\n\r\n\r\n    generateDraw() {\r\n        // Check if regenerating\r\n        if(this.state.generated) {\r\n            const confGen = window.confirm(\"Do you really want to regenerate the draw?\");\r\n            if(!confGen) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Initialize values\r\n        let draws_generated = JSON.parse(localStorage.getItem(\"draws_generated\"));\r\n        let draws = JSON.parse(localStorage.getItem(\"draws\"));\r\n        let teams_middle = JSON.parse(localStorage.getItem(\"teams_middle\"));\r\n        let teams_high = JSON.parse(localStorage.getItem(\"teams_high\"));\r\n        let judges = JSON.parse(localStorage.getItem(\"judges\"));\r\n\r\n        const lenM = teams_middle.length;\r\n        const lenH = teams_high.length;\r\n\r\n        // Select only the judges that are available this round\r\n        if(this.props.r === \"1\") {\r\n            judges = judges.filter(el => el.r1 === true);\r\n        } else if(this.props.r === \"2\") {\r\n            judges = judges.filter(el => el.r2 === true);\r\n        } else {\r\n            judges = judges.filter(el => el.r3 === true);\r\n        }\r\n\r\n        // Split chairs and wings\r\n        const chairs = judges.filter(el => el.canChair === true).map(el => el.judgeID);\r\n        let wings = judges.filter(el => el.canChair === false).map(el => el.judgeID);\r\n\r\n        // Check for an even number of teams\r\n        if(lenM % 2 !== 0 && lenH % 2 !== 0) {\r\n            const confMix = window.confirm(\"Both brackets have an odd number of teams. This means that one middle school team would debate one high school team. Do you want to continue under these circumstances?\");\r\n            if(!confMix) {\r\n                return;\r\n            } else {\r\n                alert(\"This scenario hasn't been implemented yet, sorry.\");\r\n                return;\r\n            }\r\n        } else if(lenM % 2 !== 0) {\r\n            alert(\"There is an odd number of middle school teams\\u2014add or remove a team to generate the draw.\");\r\n            return;\r\n        } else if(lenH % 2 !== 0) {\r\n            alert(\"There is an odd number of high school teams\\u2014add or remove a team to generate the draw.\");\r\n            return;\r\n        }\r\n\r\n        // Check whether previous draws have happened\r\n        if(this.props.r === \"2\") {\r\n            if(draws_generated[0] !== true) {\r\n                alert(\"You can't generate the draw for round 2 before generating the draw for round 1.\");\r\n                return;\r\n            }\r\n        } else if(this.props.r === \"3\") {\r\n            if(draws_generated[0] !== true || draws_generated[1] !== true) {\r\n                alert(\"You can't generate the draw for round 3 before generating the draw for rounds 1 and 2.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Check whether there are enough chairs\r\n        const totalTeams = lenM + lenH;\r\n        if(chairs.length < totalTeams / 2) {\r\n            alert(\"There are not enough chairs to adjudicate every room. Please add some more.\");\r\n            return;\r\n        }\r\n\r\n        // Shuffle chairs for random picking\r\n        for (let i = chairs.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [chairs[i], chairs[j]] = [chairs[j], chairs[i]];\r\n        }\r\n\r\n        // Select chairs and put the rest as wings\r\n        while(chairs.length > totalTeams / 2) {\r\n            wings.push(chairs.pop());\r\n        }\r\n\r\n        // Generate pairings\r\n        let pairings_middle = [];\r\n        let pairings_high = [];\r\n        let tm = [];\r\n        let th = [];\r\n\r\n        if(this.props.r === \"1\") {\r\n            // Generate lists of teams in random order\r\n            tm = teams_middle.slice(0);\r\n            for (let i = lenM - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [tm[i], tm[j]] = [tm[j], tm[i]];\r\n            }\r\n            th = teams_high.slice(0);\r\n            for (let i = lenH - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [th[i], th[j]] = [th[j], th[i]];\r\n            }\r\n        } else {\r\n            // Generate lists of teams in order of team wins, then total team points\r\n            tm = teams_middle\r\n                .slice(0)\r\n                .sort((a, b) => {\r\n                    if(a.totalWins < b.totalWins) {\r\n                        return 1;\r\n                    } else if(a.totalWins > b.totalWins) {\r\n                        return -1;\r\n                    } else {\r\n                        if(a.totalPoints < b.totalPoints) {\r\n                            return 1;\r\n                        } else if(a.totalPoints > b.totalPoints) {\r\n                            return -1;\r\n                        } else {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                });\r\n            th = teams_high\r\n                .slice(0)\r\n                .sort((a, b) => {\r\n                    if(a.totalWins < b.totalWins) {\r\n                        return 1;\r\n                    } else if(a.totalWins > b.totalWins) {\r\n                        return -1;\r\n                    } else {\r\n                        if(a.totalPoints < b.totalPoints) {\r\n                            return 1;\r\n                        } else if(a.totalPoints > b.totalPoints) {\r\n                            return -1;\r\n                        } else {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n\r\n        // For round 2, make sure everyone is on another side\r\n        if(this.props.r === \"2\") {\r\n            tm.forEach((team, index) => {\r\n                if(index % 2 === 0 && team.sideR1 === \"prop\") {\r\n                    for(let i = index + 1; i < lenM; i++) {\r\n                        if(tm[i].sideR1 === \"opp\") {\r\n                            [tm[index], tm[i]] = [tm[i], tm[index]];\r\n                            break;\r\n                        }\r\n                    }\r\n                } else if(index % 2 === 1 && team.sideR1 === \"opp\") {\r\n                    for(let i = index + 1; i < lenM; i++) {\r\n                        if(tm[i].sideR1 === \"prop\") {\r\n                            [tm[index], tm[i]] = [tm[i], tm[index]];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            th.forEach((team, index) => {\r\n                if(index % 2 === 0 && team.sideR1 === \"prop\") {\r\n                    for(let i = index + 1; i < lenH; i++) {\r\n                        if(th[i].sideR1 === \"opp\") {\r\n                            [th[index], th[i]] = [th[i], th[index]];\r\n                            break;\r\n                        }\r\n                    }\r\n                } else if(index % 2 === 1 && team.sideR1 === \"opp\") {\r\n                    for(let i = index + 1; i < lenH; i++) {\r\n                        if(th[i].sideR1 === \"prop\") {\r\n                            [th[index], th[i]] = [th[i], th[index]];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Distribute teams and chairs\r\n        let currProp, currOpp, chIndex;\r\n        for (let i = 0; i < lenM; i += 2) {\r\n            if(this.props.r === \"1\") {\r\n                tm[i].sideR1 = \"prop\";\r\n                tm[i + 1].sideR1 = \"opp\";\r\n            }\r\n\r\n            currProp = tm[i].teamID;\r\n            currOpp = tm[i + 1].teamID;\r\n            let currChair = chairs.pop();\r\n            pairings_middle[i / 2] = {\r\n                prop: currProp,\r\n                opp: currOpp,\r\n                chair: currChair,\r\n                wings: [],\r\n                room: \"[room]\"\r\n            }\r\n\r\n            chIndex = judges.findIndex(el => {\r\n                return el.judgeID.toString() === currChair.toString()\r\n            });\r\n            judges[chIndex].hasChaired.push(currProp, currOpp);\r\n        }\r\n        for (let i = 0; i < lenH; i += 2) {\r\n            if(this.props.r === \"1\") {\r\n                th[i].sideR1 = \"prop\";\r\n                th[i + 1].sideR1 = \"opp\";\r\n            }\r\n\r\n            currProp = th[i].teamID;\r\n            currOpp = th[i + 1].teamID;\r\n            let currChair = chairs.pop();\r\n            pairings_high[i / 2] = {\r\n                prop: currProp,\r\n                opp: currOpp,\r\n                chair: currChair,\r\n                wings: [],\r\n                room: \"[room]\"\r\n            }\r\n\r\n            chIndex = judges.findIndex(el => {\r\n                return el.judgeID.toString() === currChair.toString()\r\n            });\r\n            judges[chIndex].hasChaired.push(currProp, currOpp);\r\n        }\r\n\r\n        // Add wings\r\n        while(wings.length > 0) {\r\n            for (let i = 0; i < pairings_middle.length; i++) {\r\n                pairings_middle[i].wings.push(wings.pop());\r\n                if(wings.length === 0) {\r\n                    break;\r\n                }\r\n            }\r\n            if(wings.length === 0) {\r\n                break;\r\n            }\r\n            for (let i = 0; i < pairings_high.length; i++) {\r\n                pairings_high[i].wings.push(wings.pop());\r\n                if(wings.length === 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Randomize rows\r\n        for (let i = pairings_middle.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [pairings_middle[i], pairings_middle[j]] = [pairings_middle[j], pairings_middle[i]];\r\n        }\r\n        for (let i = pairings_high.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [pairings_high[i], pairings_high[j]] = [pairings_high[j], pairings_high[i]];\r\n        }\r\n\r\n        // Save in storage\r\n        const drawr = {\r\n            pairings_middle: pairings_middle,\r\n            pairings_high: pairings_high\r\n        }\r\n        if(this.props.r === \"1\") {\r\n            draws[0] = drawr;\r\n        } else if(this.props.r === \"2\") {\r\n            draws[1] = drawr;\r\n        } else {\r\n            draws[2] = drawr;\r\n        }\r\n        localStorage.setItem(\"draws\", JSON.stringify(draws));\r\n\r\n        // Update team values\r\n        tm.forEach(team => {\r\n            const i = teams_middle.indexOf(team);\r\n            teams_middle[i] = team;\r\n        });\r\n        localStorage.setItem(\"teams_middle\", JSON.stringify(teams_middle));\r\n        th.forEach(team => {\r\n            const i = teams_high.indexOf(team);\r\n            teams_high[i] = team;\r\n        });\r\n        localStorage.setItem(\"teams_high\", JSON.stringify(teams_high));\r\n\r\n\r\n        // Update chair values\r\n        chairs.forEach(chair => {\r\n            const j = judges.indexOf(chair);\r\n            judges[j] = chair;\r\n        });\r\n        localStorage.setItem(\"judges\", JSON.stringify(judges));\r\n\r\n        this.setState({pairings_middle: pairings_middle});\r\n        this.setState({pairings_high: pairings_high});\r\n\r\n        draws_generated[this.props.r - 1] = true;\r\n        localStorage.setItem(\"draws_generated\", JSON.stringify(draws_generated));\r\n        this.setState({generated: true});\r\n    }\r\n\r\n    updatePairings(pair, bracket, round) {\r\n        const draws = JSON.parse(localStorage.getItem(\"draws\"));\r\n        let pairings;\r\n        if(bracket === \"middle\") {\r\n            pairings = this.state.pairings_middle;\r\n        } else {\r\n            pairings = this.state.pairings_high;\r\n        }\r\n\r\n        const index = pairings.indexOf(pair);\r\n        pairings[index] = pair;\r\n\r\n        if(bracket === \"middle\") {\r\n            this.setState({pairings_middle: pairings});\r\n            draws[this.props.r - 1].pairings_middle = pairings;\r\n        } else {\r\n            this.setState({pairings_high: pairings});\r\n            draws[this.props.r - 1].pairings_high = pairings;\r\n        }\r\n        localStorage.setItem(\"draws\", JSON.stringify(draws));\r\n    }\r\n\r\n\r\n    render() {\r\n        let tables;\r\n        if(!this.state.generated) {\r\n            tables = <div></div>;\r\n        } else {\r\n            tables = (\r\n                <div>\r\n                    <h3>Middle School</h3>\r\n                    <Table className=\"table-no-top-margin draw-table-middle\" hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Room</th>\r\n                                <th className=\"draw-table-team-cell\">Proposition</th>\r\n                                <th className=\"draw-table-team-cell\">Opposition</th>\r\n                                <th>Judges</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.pairings_middle.map((pair, index) => {\r\n                                    return <RoundRow \r\n                                            key={`middle-pair-${index}`}\r\n                                            pair={pair}\r\n                                            bracket=\"middle\"\r\n                                            round={this.props.r}\r\n                                            updatePairings={this.updatePairings} />;\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    \r\n                    <h3>High School</h3>\r\n                    <Table className=\"table-no-top-margin\" hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Room</th>\r\n                                <th className=\"draw-table-team-cell\">Proposition</th>\r\n                                <th className=\"draw-table-team-cell\">Opposition</th>\r\n                                <th>Judges</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.pairings_high.map((pair, index) => {\r\n                                    return <RoundRow \r\n                                            key={`high-pair-${index}`}\r\n                                            pair={pair}\r\n                                            bracket=\"high\" />;\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Row className=\"draw-header\">\r\n                    <Col>\r\n                        <h2>Round {this.props.r}</h2>\r\n                        <Button\r\n                            onClick={this.generateDraw}\r\n                            className={this.state.generated && \"hidden\"}>\r\n                            Generate draw\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            onClick={this.generateDraw}\r\n                            className={!this.state.generated && \"hidden\"}>\r\n                            Regenerate draw\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={9} className=\"table-col\">\r\n                        {tables}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Round;","import React from 'react';\r\n\r\nimport Round from './Round';\r\n\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\nclass Draw extends React.Component {\r\n    render() {\r\n        return (\r\n            <Tab.Container id={`draw-view`} defaultActiveKey=\"round1\">\r\n                <Row>\r\n                    <Col sm={2}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"round1\" className=\"sub-nav-link\">Round 1</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"round2\" className=\"sub-nav-link\">Round 2</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"round3\" className=\"sub-nav-link\">Round 3</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"round1\">\r\n                                <Round r=\"1\" />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"round2\">\r\n                                <Round r=\"2\" />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"round3\">\r\n                                <Round r=\"3\" />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Draw;","import React from 'react';\r\nimport './App.scss';\r\nimport logo from './images/logo.svg';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\n\r\nimport Home from './home/Home';\r\nimport Participants from './participants/Participants';\r\nimport Judges from './judges/Judges';\r\nimport Draw from './draw/Draw';\r\n\r\n\r\nconst s = JSON.stringify;\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if(!localStorage.getItem(\"tournament_name\")) {\r\n            localStorage.setItem(\"tournament_name\", s(\"New tournament\"));\r\n        }\r\n        if(!localStorage.getItem(\"speakers_middle\")) {\r\n            localStorage.setItem(\"speakers_middle\", s([]));\r\n        }\r\n        if(!localStorage.getItem(\"teams_middle\")) {\r\n            localStorage.setItem(\"teams_middle\", s([]));\r\n        }\r\n        if(!localStorage.getItem(\"speakers_high\")) {\r\n            localStorage.setItem(\"speakers_high\", s([]));\r\n        }\r\n        if(!localStorage.getItem(\"teams_high\")) {\r\n            localStorage.setItem(\"teams_high\", s([]));\r\n        }\r\n        if(!localStorage.getItem(\"speakers_counter\")) {\r\n            localStorage.setItem(\"speakers_counter\", 0);\r\n        }\r\n        if(!localStorage.getItem(\"teams_counter\")) {\r\n            localStorage.setItem(\"teams_counter\", 0);\r\n        }\r\n        if(!localStorage.getItem(\"judges\")) {\r\n            localStorage.setItem(\"judges\", s([]));\r\n        }\r\n        if(!localStorage.getItem(\"judges_counter\")) {\r\n            localStorage.setItem(\"judges_counter\", 0);\r\n        }\r\n        if(!localStorage.getItem(\"draws_generated\")) {\r\n            localStorage.setItem(\"draws_generated\", s([false, false, false]));\r\n        }\r\n        if(!localStorage.getItem(\"draws\")) {\r\n            localStorage.setItem(\"draws\", s([\r\n                {pairings_middle: [], pairings_high: []},\r\n                {pairings_middle: [], pairings_high: []},\r\n                {pairings_middle: [], pairings_high: []}\r\n            ]));\r\n        }\r\n\r\n        document.title = `${JSON.parse(localStorage.getItem(\"tournament_name\"))} - TacoTab`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid=\"true\" className=\"app\">\r\n                <Row>\r\n                    <Col id=\"app-container\">\r\n                        <div id=\"logo\">\r\n                            <img src={logo} alt=\"TacoTab logo\" />\r\n                            <h1>TacoTab</h1>\r\n                        </div>\r\n\r\n                        <Tabs defaultActiveKey=\"home\" id=\"app-nav\">\r\n                            <Tab eventKey=\"home\" className=\"app-nav-tab\" title=\"Home\">\r\n                                <Home />\r\n                            </Tab>\r\n                            <Tab eventKey=\"middleschool\" className=\"app-nav-tab\" title=\"Middle School\">\r\n                                <Participants bracket=\"middle\" />\r\n                            </Tab>\r\n                            <Tab eventKey=\"highschool\" className=\"app-nav-tab\" title=\"High School\">\r\n                                <Participants bracket=\"high\" />\r\n                            </Tab>\r\n                            <Tab eventKey=\"judges\" className=\"app-nav-tab\" title=\"Judges\">\r\n                                <Judges />\r\n                            </Tab>\r\n                            <Tab eventKey=\"draw\" className=\"app-nav-tab\" title=\"Draw\">\r\n                                <Draw />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}